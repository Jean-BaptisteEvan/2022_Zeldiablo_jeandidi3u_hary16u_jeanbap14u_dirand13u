
@startuml
skinparam class{
    backgroundColor<<Nouveau>> Pink
    borderColor<<Nouveau>>  Black
    backgroundColor<<Modifie>> LightGreen
    borderColor<<Modifie>>  Black
}
package moteurJeu{
interface Jeu{
+ init()
+ update(seconds: double, clavier: Clavier)
+ etreFini(): boolean
}


interface DessinJeu {
+ dessinerJeu(jeu: Jeu, canvas: Canvas)
}
}
package gamelaby.laby{
    class LabyDessin{
        + dessinerJeu(jeu: Jeu, canvas: Canvas)
    }

DessinJeu <|.. LabyDessin
    class LabyJeu{
        +init()
        +Labyjeu()
        +update(seconds : double, clavier : Clavier)
        +etreFini() : boolean
        }

Jeu <|.. LabyJeu

    class Labyrinthe{
        -murs : boolean[ ][ ]
        +Labyrinthe(nom : String)
        +getSuivant(x :int, y int, action : String ) : int[]
        +deplacerEntite(action : String)
        +etreFini() : boolean
        +getLength() : int
        +getLengthY() : int

    }
LabyJeu "1" --> "1" Labyrinthe : -labyrinthe
    interface Entite {
        +etrePresent(dx : int, dy :int) : boolean
        + getX() : int
        + getY() : int



    }
    class Perso <<Modifie>>{
    -x : int
    -y : int
    -vie : int
    - PERSO : String
    +etrePresent(dx : int, dy : int) : boolean
    +getX() : int
    +getY() : int
    +getVie() : int

    }
    class Monstre{
    -x : int
    -y : int
    -MONSTRE : String
    +etrePresent(dx : int, dy : int) :boolean
    +getX() : int
    +getY() : int

    }
    class Amulette<<nouveau>>{
        -x : int
        -y : int
        -AMULETTE : String
        +etrePresent(dx : int, dy : int) : boolean
    }
Entite <|.. Amulette
 Entite <|.. Perso
 Entite <|.. Monstre
 Labyrinthe "1" --> "1" Perso : -pj
 Labyrinthe "1" --> "1" Monstre : -monstre
 LabyJeu <. LabyDessin:uses
    }



@enduml